name: Build and deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - proof-of-concept # TEMP
      - feature/*

concurrency:
  group: cd

jobs:
  test-node:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run tests
        uses: ./.github/actions/node-tests

  test-python:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run tests
        uses: ./.github/actions/python-tests

  version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Get tag
        id: version-tag
        uses: ./.github/actions/get-version-tag
    outputs:
      version: ${{ steps.version-tag.outputs.version-tag }}

  # build:
  #   runs-on: ubuntu-latest
  #   needs:
  #     - test-python
  #     - test-node
  #     - version
  #   permissions:
  #     packages: write
  #     contents: read
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Build Docker image
  #       uses: ./.github/actions/docker-build
  #       with:
  #         version: ${{ needs.version.outputs.version }}
  #         # latest: github.ref == 'refs/heads/main'
  #         latest: true # TEMP
  #         github-token: ${{ secrets.GITHUB_TOKEN }}
  #         docker-image-name: ${{ vars.DOCKER_IMAGE_NAME }}

  update:
    runs-on: ubuntu-latest
    needs:
      # - build
      - version
    # if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
        with:
          repository: nationalarchives/ds-etna
          ref: feature/my-cool-feature
          token: ${{ secrets.ACTIONS_GITHUB_TOKEN }}
      - name: Set up git config
        run: |
          git config user.name "ds-etna-frontend"
          git config user.email "<>"
      - name: Install jq
        run: sudo apt-get install jq
      - name: Update config
        run: jq --indent 4 '(.services.frontend.version|="${{ needs.version.outputs.version }}")' config-aws.json > tmp.$$.json && mv tmp.$$.json config-aws.json
      - name: Push new version
        run: |
          git add config-aws.json
          git commit -m "Update frontend to v${{ needs.version.outputs.version }}"
          git push origin feature/my-cool-feature

  deploy:
    runs-on: ubuntu-latest
    needs:
      - update
    # if: github.ref == 'refs/heads/main'
    steps:
      - uses: nationalarchives/ds-etna/.github/actions/deploy@feature/my-cool-feature
        with:
          environment: develop-test
